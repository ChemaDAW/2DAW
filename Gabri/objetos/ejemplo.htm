{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"ConvertirNumeros": {
		"prefix": "convertirnumeros",
		"body": [
			"const numero = $1;",
			"",
			"const hexadecimal = numero.toString(16);",
			"console.log(\"Hexadecimal:\", hexadecimal);",
			"",
			"const octal = numero.toString(8);",
			"console.log(\"Octal:\", octal);",
			"",
			"const binario = numero.toString(2);",
			"console.log(\"Binario:\", binario);"
		],
		"description": "Convertir un número a Hexadecimal, Octal y Binario"
	},
	"Factorial": {
		"prefix": "factorial",
		"body": [
			"function factorial(n) {",
			"    if (n === 0 || n === 1) {",
			"        return 1;",
			"    }",
			"    return n * factorial(n - 1);",
			"}",
			"",
			"console.log(factorial($1));"
		],
		"description": "Calcular el factorial de un número"
	},
	"MayorOMenor": {
		"prefix": "mayormenor",
		"body": [
			"function mayorOMenor(a, b) {",
			"    if (a > b) {",
			"        return \"El mayor es: \" + a;",
			"    } else if (b > a) {",
			"        return \"El mayor es: \" + b;",
			"    } else {",
			"        return \"Los números son iguales.\";",
			"    }",
			"}",
			"",
			"console.log(mayorOMenor($1, $2));"
		],
		"description": "Comparar dos números y mostrar el mayor"
	},
	"NumerosPrimos": {
		"prefix": "esprimo",
		"body": [
			"function esPrimo(num) {",
			"    for (let i = 2; i < num; i++)",
			"        if (num % i === 0) return false;",
			"    return num > 1;",
			"}",
			"",
			"console.log(esPrimo($1));"
		],
		"description": "Verificar si un número es primo"
	},
	"NumeroAleatorio": {
		"prefix": "aleatorio",
		"body": [
			"function generarNumeroAleatorio(min, max) {",
			"    return Math.floor(Math.random() * (max - min + 1)) + min;",
			"}",
			"",
			"console.log(generarNumeroAleatorio($1, $2));"
		],
		"description": "Generar un número aleatorio en un rango"
	},
	"MaximoComunDivisor": {
		"prefix": "mcd",
		"body": [
			"function mcd(a, b) {",
			"    return b === 0 ? a : mcd(b, a % b);",
			"}",
			"",
			"console.log(mcd($1, $2));"
		],
		"description": "Calcular el Máximo Común Divisor (MCD)"
	},
	"MinimoComunMultiplo": {
		"prefix": "mcm",
		"body": [
			"function mcm(a, b) {",
			"    return (a * b) / mcd(a, b);",
			"}",
			"",
			"function mcd(a, b) {",
			"    return b === 0 ? a : mcd(b, a % b);",
			"}",
			"",
			"console.log(mcm($1, $2));"
		],
		"description": "Calcular el Mínimo Común Múltiplo (MCM)"
	},
	"Palindromo": {
		"prefix": "palindromo",
		"body": [
			"function esPalindromo(cadena) {",
			"    const sinEspacios = cadena.replace(/\\s/g, '').toLowerCase();",
			"    const alReves = sinEspacios.split('').reverse().join('');",
			"    return sinEspacios === alReves;",
			"}",
			"",
			"console.log(esPalindromo(\"$1\"));"
		],
		"description": "Verificar si una cadena es un palíndromo"
	},
					
}